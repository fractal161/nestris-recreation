struct LeaderboardEntry
    U[6] name
    UUU score_bcd
    U level

vars
    U start_level = 0

    // use read/write HighScore(ptr) to interface
    [30] leaderboard_a
    [30] leaderboard_b

fn print_high_scores()
    MM leaderboard = @leaderboard_a
    if game_type == GAME_TYPE_B
        leaderboard = @leaderboard_b
    for U i = 0; i < 3; i += 1
        LeaderboardEntry entry = read LeaderboardEntry(leaderboard)
        ppu_set_addr_coords(9, 20 + (i << 1), 0)
        for U j = 0; j < 6; j += 1
            {PPUDATA}(@leaderboard_charmap[entry.name[j]])
        {PPUDATA}($FF)
        print_byte(entry.score_bcd.a)
        print_byte(entry.score_bcd.b)
        print_byte(entry.score_bcd.c)
        {PPUDATA}($FF)
        print_byte(entry.level)

mode level_menu()
: nmi main_nmi
    // TODO: updateAudio2
    render_mode = RENDER_MENU_SCREEN
    safe_disable_rendering()
    mmc1_set_chr_0(CHR_TITLE_MENU)
    // make both sprite/bg point to chr 0
    ppu_ctrl &= ~(PPUCTRL_SPR_PT_1000 | PPUCTRL_BG_PT_1000)

    load_nt(@nt_level_menu)

    if game_type == GAME_TYPE_A
        ppu_upload_full_palette(@palette_a_level_menu)
        // set to A-type
        ppu_set_addr_coords(13, 3, 0)
        {PPUDATA}($0A)
        // erase height
        for U i = 0; i < 8; i += 1
            ppu_set_addr_coords(19, 7+i, 0)
            for U j = 0; j < 8; j += 1
                {PPUDATA}($FF)
    else
        ppu_upload_full_palette(@palette_b_level_menu)
    print_high_scores()
    safe_enable_rendering()
    // TODO: set originalY and dropSpeed to 0 but idk why
    while start_level >= 10
        start_level -= 10
    while true
        nmi

ct U GAME_TYPE_A = 0
ct U GAME_TYPE_B = 1

ct U NUM_MUSIC_TRACKS = 3

ct UU[] points_bcd_table = UU[]($0000, $0040, $0100, $0300, $1200)

ct U RENDER_MENU_SCREEN = 0
ct U RENDER_GAME = 1
ct U RENDER_HIGH_SCORE_ENTRY = 2
ct U RENDER_VICTORY = 3

ct U PLAY_STATE_GAME = 0
ct U PLAY_STATE_LOCK_PIECE = 1
ct U PLAY_STATE_CHECK_FULL_LINES = 2
ct U PLAY_STATE_WAIT_FOR_LINE_CLEAR_ANIM = 3
ct U PLAY_STATE_UPDATE_STATS = 4
ct U PLAY_STATE_CHECK_B_TYPE_DONE = 5
ct U PLAY_STATE_RECEIVE_GARBAGE = 6 // should be filler
ct U PLAY_STATE_GET_NEXT_PIECE = 7
ct U PLAY_STATE_UNKNOWN_NOOP = 8
ct U PLAY_STATE_CURTAIN = 9
ct U PLAY_STATE_GAME_OVER = 10

ct U GAME_RENDER_HIGH_SCORE_LETTER = $80
ct U GAME_RENDER_PIECE_COUNT = $40
ct U GAME_RENDER_SCORE = $04
ct U GAME_RENDER_LEVEL = $02
ct U GAME_RENDER_LINES = $01

ct U CHR_TITLE_MENU   = $00
ct U CHR_TYPEB_ENDING = $01
ct U CHR_TYPEA_ENDING = $02
ct U CHR_GAME         = $03

ct U MENU_TILE_ARROW = $27

ct U MENU_TILE_CURSOR = $FC

// TODO: move a bunch of these to skin
ct U CURTAIN_TILE = $4F

ct U GAME_TILE_1 = $7B
ct U GAME_TILE_2 = $7C
ct U GAME_TILE_3 = $7D
ct U GAME_TILE_EMPTY = $EF
ct U GAME_TILE_HIDDEN = $FF

// platform specific parameters
ct fn LEGAL_SLEEP_TIME() U
    if DEBUG
        return 0
    if VERSION == VERSION_PAL
        return LEGAL_SLEEP_TIME_PAL
    return LEGAL_SLEEP_TIME_NTSC

ct fn MENU_CURSOR_MASK() U
    if VERSION == VERSION_PAL
        return MENU_CURSOR_MASK_PAL
    return MENU_CURSOR_MASK_NTSC

ct fn INITIAL_GAME_DELAY() U
    if VERSION == VERSION_PAL
        return INITIAL_GAME_DELAY_PAL
    return INITIAL_GAME_DELAY_NTSC

ct fn DAS_THRESHOLD() U
    if VERSION == VERSION_PAL
        return DAS_THRESHOLD_PAL
    return DAS_THRESHOLD_NTSC

ct fn DAS_CHECKPOINT() U
    if VERSION == VERSION_PAL
        return DAS_CHECKPOINT_PAL
    return DAS_CHECKPOINT_NTSC

ct fn GRAVITY_TABLE() U[30]
    if VERSION == VERSION_PAL
        return GRAVITY_TABLE_PAL
    return GRAVITY_TABLE_NTSC

ct fn ENDING_SLEEP_TIME_1() U
    if VERSION == VERSION_PAL
        return ENDING_SLEEP_TIME_1_PAL
    return ENDING_SLEEP_TIME_1_NTSC

ct fn ENDING_SLEEP_TIME_2() U
    if VERSION == VERSION_PAL
        return ENDING_SLEEP_TIME_2_PAL
    return ENDING_SLEEP_TIME_2_NTSC

ct fn ENDING_SLEEP_TIME_3() U
    if VERSION == VERSION_PAL
        return ENDING_SLEEP_TIME_3_PAL
    return ENDING_SLEEP_TIME_3_NTSC

ct fn HIGH_SCORE_CURSOR_MASK() U
    if VERSION == VERSION_PAL
        return HIGH_SCORE_CURSOR_MASK_PAL
    return HIGH_SCORE_CURSOR_MASK_NTSC

// NTSC data
ct U LEGAL_SLEEP_TIME_NTSC = $FF
ct U MENU_CURSOR_MASK_NTSC = %00000011
ct U INITIAL_GAME_DELAY_NTSC = $A0
ct U DAS_THRESHOLD_NTSC = 16
ct U DAS_CHECKPOINT_NTSC = 10
ct U[30] GRAVITY_TABLE_NTSC = U[](
    $30,$2B,$26,$21,$1C,$17,$12,$0D,
    $08,$06,$05,$05,$05,$04,$04,$04,
    $03,$03,$03,$02,$02,$02,$02,$02,
    $02,$02,$02,$02,$02,$01,
)
ct U ENDING_SLEEP_TIME_1_NTSC = $80
ct U ENDING_SLEEP_TIME_2_NTSC = $40
ct U ENDING_SLEEP_TIME_3_NTSC = $02
ct U HIGH_SCORE_CURSOR_MASK_NTSC = $03

// PAL data
ct U LEGAL_SLEEP_TIME_PAL = $CC
ct U MENU_CURSOR_MASK_PAL = %00000001
ct U INITIAL_GAME_DELAY_PAL = $B4
ct U DAS_THRESHOLD_PAL = 12
ct U DAS_CHECKPOINT_PAL = 8
ct U[30] GRAVITY_TABLE_PAL = U[](
    $24,$20,$1D,$19,$16,$12,$0F,$0B,
    $07,$05,$04,$04,$04,$03,$03,$03,
    $02,$02,$02,$01,$01,$01,$01,$01,
    $01,$01,$01,$01,$01,$01
)
ct U ENDING_SLEEP_TIME_1_PAL = $66
ct U ENDING_SLEEP_TIME_2_PAL = $33
ct U ENDING_SLEEP_TIME_3_PAL = $01
ct U HIGH_SCORE_CURSOR_MASK_PAL = $01

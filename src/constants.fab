// flags
// TODO: at some point maybe consider consolidating flags into one byte
ct U GAME_TYPE_A = 0
ct U GAME_TYPE_B = 1

ct U NUM_MUSIC_TRACKS = 3

ct U RENDER_MENU_SCREEN = 0
ct U RENDER_GAME = 1
ct U RENDER_VICTORY_SCREEN = 2
ct U RENDER_ENDING_ANIMATION = 3

ct U PLAY_STATE_GAME = 0
ct U PLAY_STATE_LOCK_PIECE = 1
ct U PLAY_STATE_CHECK_FULL_LINES = 2
ct U PLAY_STATE_WAIT_FOR_LINE_CLEAR_ANIM = 3
ct U PLAY_STATE_UPDATE_STATS = 4
ct U PLAY_STATE_CHECK_B_TYPE_DONE = 5
ct U PLAY_STATE_RECEIVE_GARBAGE = 6 // should be filler
ct U PLAY_STATE_GET_NEXT_PIECE = 7
ct U PLAY_STATE_UNKNOWN_NOOP = 8
ct U PLAY_STATE_GAME_OVER_CURTAIN = 9

ct U GAME_RENDER_HIGH_SCORE_LETTER = $80
ct U GAME_RENDER_STATS = $40
ct U GAME_RENDER_SCORE = $04
ct U GAME_RENDER_LEVEL = $02
ct U GAME_RENDER_LINES = $01

ct U CHR_TITLE_MENU   = $00
ct U CHR_TYPEB_ENDING = $01
ct U CHR_TYPEA_ENDING = $02
ct U CHR_GAME         = $03

ct U MENU_TILE_ARROW = $27

ct U LEVEL_TILE_CURSOR = $FC

ct U GAME_TILE_EMPTY = $EF

// platform specific parameters
ct fn LEGAL_SLEEP_TIME() U
    if DEBUG
        return 0
    if VERSION == VERSION_PAL
        return LEGAL_SLEEP_TIME_PAL
    return LEGAL_SLEEP_TIME_NTSC

ct fn MENU_CURSOR_MASK() U
    if VERSION == VERSION_PAL
        return MENU_CURSOR_MASK_PAL
    return MENU_CURSOR_MASK_NTSC

ct fn INITIAL_FALL_TIMER() U
    if VERSION == VERSION_PAL
        return INITIAL_FALL_TIMER_PAL
    return INITIAL_FALL_TIMER_NTSC

ct fn DAS_THRESHOLD() U
    if VERSION == VERSION_PAL
        return DAS_THRESHOLD_PAL
    return DAS_THRESHOLD_NTSC

ct fn DAS_CHECKPOINT() U
    if VERSION == VERSION_PAL
        return DAS_CHECKPOINT_PAL
    return DAS_CHECKPOINT_NTSC

// NTSC data
ct U LEGAL_SLEEP_TIME_NTSC = $FF
ct U MENU_CURSOR_MASK_NTSC = %00000011
ct U INITIAL_FALL_TIMER_NTSC = $A0
ct U DAS_THRESHOLD_NTSC = 16
ct U DAS_CHECKPOINT_NTSC = 10

// PAL data
ct U LEGAL_SLEEP_TIME_PAL = $CC
ct U MENU_CURSOR_MASK_PAL = %00000001
ct U INITIAL_FALL_TIMER_PAL = $B4
ct U DAS_THRESHOLD_PAL = 12
ct U DAS_CHECKPOINT_PAL = 8


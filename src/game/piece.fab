// total_piece_count persists across the game's lifetime, so we make it groupless
// piece_spawn_id should be reset at the start of every game, which is why we include it in the /game grup
vars
    U total_piece_count = 0

vars /game
    U piece_spawn_id = 0 // seems to be used exclusively by pick_next_piece

ct U PIECE_T = $00
ct U PIECE_J = $01
ct U PIECE_Z = $02
ct U PIECE_O = $03
ct U PIECE_S = $04
ct U PIECE_L = $05
ct U PIECE_I = $06

ct U PIECE_ID_TU = $00
ct U PIECE_ID_TR = $01
ct U PIECE_ID_TD = $02
ct U PIECE_ID_TL = $03
ct U PIECE_ID_JL = $04
ct U PIECE_ID_JU = $05
ct U PIECE_ID_JR = $06
ct U PIECE_ID_JD = $07
ct U PIECE_ID_ZH = $08
ct U PIECE_ID_ZV = $09
ct U PIECE_ID_O  = $0A
ct U PIECE_ID_SH = $0B
ct U PIECE_ID_SV = $0C
ct U PIECE_ID_LR = $0D
ct U PIECE_ID_LD = $0E
ct U PIECE_ID_LL = $0F
ct U PIECE_ID_LU = $10
ct U PIECE_ID_IV = $11
ct U PIECE_ID_IH = $12
ct U PIECE_ID_NONE = $13
ct U NUM_PIECE_IDS = $14


ct U[] piece_spawn_id_table = U[](
    PIECE_ID_TD, PIECE_ID_JD, PIECE_ID_ZH, PIECE_ID_O,
    PIECE_ID_SH, PIECE_ID_LD, PIECE_ID_IH,
)

ct U[] ccw_id_table = U[](
    PIECE_ID_TL, PIECE_ID_TU, PIECE_ID_TR, PIECE_ID_TD,
    PIECE_ID_JD, PIECE_ID_JL, PIECE_ID_JU, PIECE_ID_JR,
    PIECE_ID_ZV, PIECE_ID_ZH,
    PIECE_ID_O,
    PIECE_ID_SV, PIECE_ID_SH,
    PIECE_ID_LU, PIECE_ID_LR, PIECE_ID_LD, PIECE_ID_LL,
    PIECE_ID_IH, PIECE_ID_IV,
)

ct U[] cw_id_table = U[](
    PIECE_ID_TR, PIECE_ID_TD, PIECE_ID_TL, PIECE_ID_TU,
    PIECE_ID_JU, PIECE_ID_JR, PIECE_ID_JD, PIECE_ID_JL,
    PIECE_ID_ZV, PIECE_ID_ZH,
    PIECE_ID_O,
    PIECE_ID_SV, PIECE_ID_SH,
    PIECE_ID_LD, PIECE_ID_LL, PIECE_ID_LU, PIECE_ID_LR,
    PIECE_ID_IH, PIECE_ID_IV,
)

ct U[] piece_id_to_type_table = U[](
    PIECE_T, PIECE_T, PIECE_T, PIECE_T,
    PIECE_J, PIECE_J, PIECE_J, PIECE_J,
    PIECE_Z, PIECE_Z,
    PIECE_O,
    PIECE_S, PIECE_S,
    PIECE_L, PIECE_L, PIECE_L, PIECE_L,
    PIECE_I, PIECE_I,
)

struct PieceTile
    U x_offset
    U y_offset
    U tile_type

struct PieceTileset
    PieceTile[4] tiles

ct CC[] piece_orientation_ptrs = CC[](
    CC(piece_orientation_data.tu),
    CC(piece_orientation_data.tr),
    CC(piece_orientation_data.td),
    CC(piece_orientation_data.tl),
    CC(piece_orientation_data.jl),
    CC(piece_orientation_data.ju),
    CC(piece_orientation_data.jr),
    CC(piece_orientation_data.jd),
    CC(piece_orientation_data.zh),
    CC(piece_orientation_data.zv),
    CC(piece_orientation_data.o),
    CC(piece_orientation_data.sh),
    CC(piece_orientation_data.sv),
    CC(piece_orientation_data.lr),
    CC(piece_orientation_data.ld),
    CC(piece_orientation_data.ll),
    CC(piece_orientation_data.lu),
    CC(piece_orientation_data.iv),
    CC(piece_orientation_data.ih),
    CC(piece_orientation_data.hidden),
)

omni data
    [] piece_orientation_data
        label tu
        PieceTile[4](
            PieceTile(-1, 0, GAME_TILE_1),
            PieceTile(0, 0, GAME_TILE_1),
            PieceTile(1, 0, GAME_TILE_1),
            PieceTile(0, -1, GAME_TILE_1),
        )
        label tr
        PieceTile[4](
            PieceTile(0, -1, GAME_TILE_1),
            PieceTile(0, 0, GAME_TILE_1),
            PieceTile(1, 0, GAME_TILE_1),
            PieceTile(0, 1, GAME_TILE_1),
        )
        label td
        PieceTile[4](
            PieceTile(-1, 0, GAME_TILE_1),
            PieceTile(0, 0, GAME_TILE_1),
            PieceTile(1, 0, GAME_TILE_1),
            PieceTile(0, 1, GAME_TILE_1),
        )
        label tl
        PieceTile[4](
            PieceTile(0, -1, GAME_TILE_1),
            PieceTile(-1, 0, GAME_TILE_1),
            PieceTile(1, 0, GAME_TILE_1),
            PieceTile(0, 1, GAME_TILE_1),
        )
        label jl
        PieceTile[4](
            PieceTile(0, -1, GAME_TILE_3),
            PieceTile(0, 0, GAME_TILE_3),
            PieceTile(-1, 1, GAME_TILE_3),
            PieceTile(0, 1, GAME_TILE_3),
        )
        label ju
        PieceTile[4](
            PieceTile(-1, -1, GAME_TILE_3),
            PieceTile(-1, 0, GAME_TILE_3),
            PieceTile(0, 0, GAME_TILE_3),
            PieceTile(1, 0, GAME_TILE_3),
        )
        label jr
        PieceTile[4](
            PieceTile(0, -1, GAME_TILE_3),
            PieceTile(1, -1, GAME_TILE_3),
            PieceTile(0, 0, GAME_TILE_3),
            PieceTile(0, 1, GAME_TILE_3),
        )
        label jd
        PieceTile[4](
            PieceTile(-1, 0, GAME_TILE_3),
            PieceTile(0, 0, GAME_TILE_3),
            PieceTile(1, 0, GAME_TILE_3),
            PieceTile(1, 1, GAME_TILE_3),
        )
        label zh
        PieceTile[4](
            PieceTile(-1, 0, GAME_TILE_2),
            PieceTile(0, 0, GAME_TILE_2),
            PieceTile(0, 1, GAME_TILE_2),
            PieceTile(1, 1, GAME_TILE_2),
        )
        label zv
        PieceTile[4](
            PieceTile(1, -1, GAME_TILE_2),
            PieceTile(0, 0, GAME_TILE_2),
            PieceTile(1, 0, GAME_TILE_2),
            PieceTile(0, 1, GAME_TILE_2),
        )
        label o
        PieceTile[4](
            PieceTile(-1, 0, GAME_TILE_1),
            PieceTile(0, 0, GAME_TILE_1),
            PieceTile(-1, 1, GAME_TILE_1),
            PieceTile(0, 1, GAME_TILE_1),
        )
        label sh
        PieceTile[4](
            PieceTile(0, 0, GAME_TILE_3),
            PieceTile(1, 0, GAME_TILE_3),
            PieceTile(-1, 1, GAME_TILE_3),
            PieceTile(0, 1, GAME_TILE_3),
        )
        label sv
        PieceTile[4](
            PieceTile(0, -1, GAME_TILE_3),
            PieceTile(0, 0, GAME_TILE_3),
            PieceTile(1, 0, GAME_TILE_3),
            PieceTile(1, 1, GAME_TILE_3),
        )
        label lr
        PieceTile[4](
            PieceTile(0, -1, GAME_TILE_2),
            PieceTile(0, 0, GAME_TILE_2),
            PieceTile(0, 1, GAME_TILE_2),
            PieceTile(1, 1, GAME_TILE_2),
        )
        label ld
        PieceTile[4](
            PieceTile(-1, 0, GAME_TILE_2),
            PieceTile(0, 0, GAME_TILE_2),
            PieceTile(1, 0, GAME_TILE_2),
            PieceTile(-1, 1, GAME_TILE_2),
        )
        label ll
        PieceTile[4](
            PieceTile(-1, -1, GAME_TILE_2),
            PieceTile(0, -1, GAME_TILE_2),
            PieceTile(0, 0, GAME_TILE_2),
            PieceTile(0, 1, GAME_TILE_2),
        )
        label lu
        PieceTile[4](
            PieceTile(1, -1, GAME_TILE_2),
            PieceTile(-1, 0, GAME_TILE_2),
            PieceTile(0, 0, GAME_TILE_2),
            PieceTile(1, 0, GAME_TILE_2),
        )
        label iv
        PieceTile[4](
            PieceTile(0, -2, GAME_TILE_1),
            PieceTile(0, -1, GAME_TILE_1),
            PieceTile(0, 0, GAME_TILE_1),
            PieceTile(0, 1, GAME_TILE_1),
        )
        label ih
        PieceTile[4](
            PieceTile(-2, 0, GAME_TILE_1),
            PieceTile(-1, 0, GAME_TILE_1),
            PieceTile(0, 0, GAME_TILE_1),
            PieceTile(1, 0, GAME_TILE_1),
        )
        label hidden
        PieceTile[4](
            PieceTile(0, 0, GAME_TILE_HIDDEN),
            PieceTile(0, 0, GAME_TILE_HIDDEN),
            PieceTile(0, 0, GAME_TILE_HIDDEN),
            PieceTile(0, 0, GAME_TILE_HIDDEN),
        )

fn get_piece_tileset(U piece_id) PieceTileset
    CC ptr = piece_orientation_ptrs[piece_id]
    return read PieceTileset(ptr)

fn get_next_piece_id() U
    if is_demo
        return get_demo_piece_id()
    if VERSION == VERSION_NWC
        advance_prng()
    total_piece_count += 1
    // first pass
    U piece_type = (prng_value.b + total_piece_count) & %111
    if piece_type != %111 && piece_spawn_id != piece_spawn_id_table[piece_type]
        piece_spawn_id = piece_spawn_id_table[piece_type]
        return piece_spawn_id
    // second pass (reroll)
    advance_prng()
    piece_type = (prng_value.b & %111) + piece_spawn_id
    while piece_type >= 7
        piece_type -= 7
    piece_spawn_id = piece_spawn_id_table[piece_type]
    return piece_spawn_id

fn get_demo_piece_id() U
    return 0
